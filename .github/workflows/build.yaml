name: Go Build and Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  push:
    tags:
      - 'v*' # v1.0.0 のようなタグが付いたら実行

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リリースのためにファイルを書き込むための権限
    # プルリクエストがマージされた場合または、タグが付いた場合のみ実行
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))


    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v4

      - name: Goのセットアップ
        uses: actions/setup-go@v5
        with:
            go-version: '1.24'  # 使用する Go のバージョン

      - name: ビルド対象のファイルを取得にリスト化
        run: |
          APPS=$(find cmd -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "APPS=$APPS" >> $GITHUB_ENV

      - name: 各アプリケーションをビルド
        run: |
          mkdir -p bin
          for app in $(echo $APPS | jq -r '.[]'); do
            echo "Building $app..."
            
            GOOS=linux GOARCH=amd64 go build -o bin/${app}-linux-amd64 cmd/$app/main.go
            GOOS=linux GOARCH=arm64 go build -o bin/${app}-linux-arm64 cmd/$app/main.go
            GOOS=darwin GOARCH=amd64 go build -o bin/${app}-mac-amd64 cmd/$app/main.go
            GOOS=darwin GOARCH=arm64 go build -o bin/${app}-mac-arm64 cmd/$app/main.go
            GOOS=windows GOARCH=amd64 go build -o bin/${app}-windows.exe cmd/$app/main.go

          done

      - name: GitHub Releases にアップロード
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/*-amd64
            bin/*-arm64
            bin/*-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
